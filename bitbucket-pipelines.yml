definitions:
    steps:
        - step: &lint-step
              name: Lint
              image: node:14.15.4
              caches:
                  - node
              script:
                  - yarn install --non-interactive
                  - yarn lint

        - step: &build-step
              name: Build
              image: node:14.15.4
              caches:
                  - node
              script:
                  - yarn install --non-interactive
                  - yarn build
              artifacts:
                  - dist/**

        - step: &e2e-step
              name: E2E tests
              image: node:14.15.4
              caches:
                  - node
              script:
                  - export NODE_OPTIONS="--max_old_space_size=2560"
                  - export JEST_JUNIT_OUTPUT_DIR='test-reports'
                  - yarn install --non-interactive
                  - yarn start-test 'node -r browser-env/register dist/main' :5002/api/ 'yarn test:e2e --ci --logHeapUsage --reporters="default" --reporters="jest-junit"'

        - step: &docker-build-step
              name: Docker build
              services:
                  - docker
              caches:
                  - docker
              script:
                  # Spreadsheet service
                  - export DOCKER_IMAGE=nexontis/spreadsheets-service
                  # Build Docker image
                  - docker login --username $DH_USER --password $DH_PASS
                  - |
                      docker build \
                      -f docker/scp/Dockerfile \
                      -t $DOCKER_IMAGE:$BITBUCKET_COMMIT \
                      -t $DOCKER_IMAGE:latest .

        - step: &docker-publish-step
              name: Docker publish
              services:
                  - docker
              caches:
                  - docker
              script:
                  - docker push $DOCKER_IMAGE

        - step: &docker-deploy-step
              name: Deploy
              image: governmentpaas/cf-cli
              services:
                  - docker
              caches:
                  - docker
              script:
                  # Spreadsheet service
                  - export DOCKER_IMAGE=nexontis/spreadsheets-service
                  # Deploy to SAP Cloud Platform
                  - cf api https://api.cf.sap.hana.ondemand.com
                  - export CF_ORGANIZATION='PaPM'
                  - export CF_SPACE='PaPM'
                  - cf login -u $CF_USER -p $CF_PASS -o "$CF_ORGANIZATION" -s "$CF_SPACE"
                  - |
                      CF_DOCKER_PASSWORD=$DH_PASS cf push \
                      --var nexontis-spreadsheets-api=$DOCKER_IMAGE:$BITBUCKET_COMMIT \
                      --var dh-user=$DH_USER \
                      --var basic-auth-user=$BASIC_AUTH_USER \
                      --var basic-auth-pass=$BASIC_AUTH_PASS \
                      --var spreadjs-licence-key=$SPREADJS_LICENCE_KEY

        - step: &deploy-papm-cloud-eu10-step
              name: Deploy to prod-dev EU10
              image: governmentpaas/cf-cli
              script:
                  - export REGION="eu10"
                  - export CF_SPACE="prod-dev"
                  - PIPELINE="deploy-spreadsheets-pipeline" envsubst < ci/trigger-papm-cloud-provider.template.json > ci/trigger-papm-cloud-provider-deploy-spreadsheets.json
                  - |
                      curl https://api.bitbucket.org/2.0/repositories/nexontis/papm-cloud-provider/pipelines/ \
                          --verbose --fail \
                          --user "${BITBUCKET_USERNAME}:${BITBUCKET_PASSWORD}" \
                          --header 'Content-Type: application/json' \
                          --data @ci/trigger-papm-cloud-provider-deploy-spreadsheets.json

pipelines:
    default:
        - step: *lint-step
        - step: *build-step
        - step: *e2e-step

    branches:
        master:
            - step: *lint-step
            - step: *build-step
            - parallel:
                  - step: *e2e-step
                  - step: *docker-build-step
            - step: *docker-publish-step
            - parallel:
                  - step: *docker-deploy-step
                  - step: *deploy-papm-cloud-eu10-step

options:
    max-time: 30
